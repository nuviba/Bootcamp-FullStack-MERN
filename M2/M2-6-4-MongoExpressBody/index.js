/* Crea una aplicaci√≥n para gestionar men√∫s de un restaurante. Cada men√∫ tendr√° 5
propiedades:
‚óè N√∫mero de men√∫
‚óè Primer plato
‚óè Postre
‚óè Segundo plato
‚óè Precio
Requisitos
‚óè Crea una ruta GET /api/menus para obtener todos los men√∫s
‚óè Crea una ruta POST /api/nuevoMenu para a√±adir un nuevo men√∫. Desde el
navegador manda un objeto con las 5 propiedades y, en el servidor, introduce ese
objeto en la base de datos
‚óè Crea una ruta PUT /api/editarMenu para modificar un men√∫ existente. Env√≠a un
objeto al servidor en el body de la petici√≥n, recoge ese objeto en el servidor
(req.body, recuerda a√±adir el app.use correspondiente para poder leer el body) y
modifica el men√∫ con el n√∫mero indicado.
‚óè Crea una ruta DELETE /api/borrarMenu para borrar un men√∫ existente. Env√≠a un
objeto al servidor en el body de la petici√≥n, recoge ese objeto en el servidor
(req.body) y borra el men√∫ con el n√∫mero indicado.
‚óè Haz que la petici√≥n DELETE se pueda hacer mediante un bot√≥n en cada uno de los
men√∫s. */

const express = require('express');
const app = express();
app.use(express.static('public'));
app.use(express.urlencoded({extended: false}))
app.use(express.json())

const mongodb = require('mongodb');
let MongoClient = mongodb.MongoClient;

MongoClient.connect( "mongodb://localhost:27017", function(err, client){
    if(err!=null) {
        console.log(err);
        console.log("no se ha podido conectar con mongo");
    } 
    else {
        app.locals.db= client.db("confeccionMenus");
        console.log("üü¢ MongoDB conectado");
    }});

app.post('/api/nuevoMenu', function(req, res) {
    let nombreMenu = req.body.nombreMenu;
    let platoUno = req.body.platoUno;
    let platoDos = req.body.platoDos;
    let postre = req.body.postre;
    let precio = req.body.precio;
    let menu={"nombreMenu":nombreMenu,"platoUno":platoUno,"platoDos":platoDos,"postre":postre,"precio":precio}
    app.locals.db
    .collection('menusRestaurantes')
    .insertOne( menu, 
        function(err,respuesta){
            if(err != null) {
            console.log(err),
            res.send({mensaje: "Ha habido un error. " + err } );
            } else {
                res.send({ results: respuesta });
            }});});

app.get('/api/menus', function(req, res){
    app.locals.db
    .collection('menusRestaurantes')
    .find()
    .toArray( 
        function(err, datos){
            if(err!=null) {
            console.log(err);
            res.send({mensaje: "error: " + err});
            } else {
            console.log(datos);
            res.send(datos);
            } });});

app.put("/api/editarMenu", function(req, res) {
    let modificacion=req.body;
    app.locals.db
    .collection('menusRestaurantes')
    .updateOne({ nombreMenu:req.body.nombreMenu},{ $set: modificacion },
    function(err, datos) {
        if(err!=null) {
        console.log(err);
        res.send({mensaje: "error: " + err});
        } 
        else {
        console.log(datos);
        res.send(datos);
        }
    });});
      
app.delete("/api/borrarMenu", function(req, res) {
    app.locals.db
    .collection('menusRestaurantes')
    .deleteMany({ nombreMenu:req.body.nombreMenu}, 
    function(err, datos) {
        if(err!=null) {
            console.log(err);
            res.send({mensaje: "error: " + err});
        } 
        else {
            console.log(datos);
            res.send(datos);
            }});});

app.listen(process.env.PORT || 3001);